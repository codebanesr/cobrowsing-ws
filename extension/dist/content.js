(()=>{class e{constructor(){this.isController=!1,this.isActive=!1,this.lastScrollTime=0,this.scrollThrottle=100,this.highlightedElement=null,this.setupMessageListener(),this.injectScript(),this.createHighlightStyle(),this.requestCurrentState()}setupMessageListener(){chrome.runtime.onMessage.addListener((e,t,n)=>{try{return e&&e.type?(this.handleMessage(e,t,n),!0):(n({success:!1,error:"Invalid message format"}),!1)}catch(e){return console.error("Error handling message in content script:",e),n({success:!1,error:e.message}),!1}})}injectScript(){const e=document.createElement("script");e.src=chrome.runtime.getURL("injected.js"),e.onload=()=>e.remove(),(document.head||document.documentElement).appendChild(e),window.addEventListener("cobrowsing-event",e=>{this.isController&&this.isActive&&this.sendEventToBackground(e.detail.type,e.detail.data)})}handleMessage(e,t,n){switch(e.type){case"apply-sync-event":this.isController||this.applySyncEvent(e.eventType,e.data),n({success:!0});break;case"set-controller":this.isController=e.isController,this.isActive=e.isActive,window.postMessage({type:"cobrowsing-control-change",isController:this.isController},"*"),n({success:!0})}}applySyncEvent(e,t){switch(e){case"scroll":this.applyScroll(t);break;case"click":this.applyClick(t);break;case"input":this.applyInput(t);break;case"navigation":this.applyNavigation(t);break;case"form-submit":this.applyFormSubmit(t);break;case"element-highlight":this.applyElementHighlight(t);break;case"focus":this.applyFocus(t);break;case"selection-change":this.applySelectionChange(t)}}applyScroll(e){this.isActive=!1,window.scrollTo({left:e.x,top:e.y,behavior:"smooth"}),setTimeout(()=>{this.isActive=!0},200)}applyClick(e){const t=this.findElementBySelector(e.selector);if(t){const n=new MouseEvent("click",{view:window,bubbles:!0,cancelable:!0,clientX:e.x,clientY:e.y});t.dispatchEvent(n)}}applyInput(e){const t=this.findElementBySelector(e.selector);if(t&&("INPUT"===t.tagName||"TEXTAREA"===t.tagName)){t.value=e.value,"number"==typeof e.selectionStart&&"number"==typeof e.selectionEnd&&t.setSelectionRange(e.selectionStart,e.selectionEnd);const n=new Event("input",{bubbles:!0});t.dispatchEvent(n);const i=new Event("change",{bubbles:!0});t.dispatchEvent(i)}}applyNavigation(e){e.url&&e.url!==window.location.href&&(window.location.href=e.url)}applyFormSubmit(e){const t=this.findElementBySelector(e.formSelector);t&&"FORM"===t.tagName&&t.submit()}findElementBySelector(e){try{return document.querySelector(e)}catch(t){return console.warn("Invalid selector:",e),null}}generateSelector(e){if(!e)return"";if(e.id)return`#${e.id}`;if(e.className&&"string"==typeof e.className){const t=e.className.trim().split(/\s+/).slice(0,3);if(t.length>0)return`${e.tagName.toLowerCase()}.${t.join(".")}`}const t=e.parentElement;if(t){const n=Array.from(t.children).filter(t=>t.tagName===e.tagName).indexOf(e)+1;return`${this.generateSelector(t)} > ${e.tagName.toLowerCase()}:nth-child(${n})`}return e.tagName.toLowerCase()}applyElementHighlight(e){let t;this.highlightedElement&&this.highlightedElement.classList.remove("cobrowsing-highlight"),e.selector?t=this.findElementBySelector(e.selector):void 0!==e.clientX&&void 0!==e.clientY&&(t=document.elementFromPoint(e.clientX,e.clientY)),t&&(t.classList.add("cobrowsing-highlight"),this.highlightedElement=t,clearTimeout(this.highlightTimeout),this.highlightTimeout=setTimeout(()=>{this.highlightedElement===t&&(t.classList.remove("cobrowsing-highlight"),this.highlightedElement=null)},3e3))}isInteractiveElement(e){if(!e)return!1;const t=["A","BUTTON","INPUT","SELECT","TEXTAREA","LABEL","OPTION"],n=["button","link","tab","menuitem","checkbox","radio"];if(t.includes(e.tagName))return!0;const i=e.getAttribute("role");if(i&&n.includes(i))return!0;if("INPUT"===e.tagName&&e.type&&["button","submit","reset","checkbox","radio"].includes(e.type))return!0;if(e.hasAttribute("onclick")||e.hasAttribute("onmousedown")||e.hasAttribute("onmouseup"))return!0;if(e.hasAttribute("tabindex")&&"-1"!==e.getAttribute("tabindex"))return!0;if("pointer"===getComputedStyle(e).cursor)return!0;if("true"===e.contentEditable)return!0;let o=e.parentElement;for(;o&&o!==document.body;){if(t.includes(o.tagName)||o.getAttribute("role")&&n.includes(o.getAttribute("role")))return!0;o=o.parentElement}return!1}applyFocus(e){const t=this.findElementBySelector(e.selector);!t||"INPUT"!==t.tagName&&"TEXTAREA"!==t.tagName&&"true"!==t.contentEditable||t.focus()}applySelectionChange(e){const t=this.findElementBySelector(e.selector);!t||"INPUT"!==t.tagName&&"TEXTAREA"!==t.tagName||"number"==typeof e.selectionStart&&"number"==typeof e.selectionEnd&&t.setSelectionRange(e.selectionStart,e.selectionEnd)}createHighlightStyle(){const e=document.getElementById("cobrowsing-highlight-style");e&&e.remove();const t=document.createElement("style");t.id="cobrowsing-highlight-style",t.textContent="\n      .cobrowsing-highlight {\n        position: relative !important;\n        outline: 2px solid #FF4444 !important;\n        outline-offset: 1px !important;\n        background-color: rgba(255, 68, 68, 0.15) !important;\n        box-shadow: 0 0 8px rgba(255, 68, 68, 0.4), inset 0 0 8px rgba(255, 68, 68, 0.1) !important;\n        border-radius: 3px !important;\n        transition: all 0.15s ease-in-out !important;\n        z-index: 999999 !important;\n      }\n      \n      .cobrowsing-highlight::before {\n        content: '' !important;\n        position: absolute !important;\n        top: -3px !important;\n        left: -3px !important;\n        right: -3px !important;\n        bottom: -3px !important;\n        border: 1px solid rgba(255, 68, 68, 0.8) !important;\n        border-radius: 4px !important;\n        pointer-events: none !important;\n        z-index: -1 !important;\n      }\n      \n      .cobrowsing-highlight:hover {\n        outline-color: #FF6666 !important;\n        background-color: rgba(255, 68, 68, 0.2) !important;\n      }\n    ",(document.head||document.documentElement).appendChild(t)}sendEventToBackground(e,t){chrome.runtime&&chrome.runtime.id?chrome.runtime.sendMessage({type:"sync-event",eventType:e,data:t}).catch(e=>{console.log("Could not send event to background:",e.message)}):console.log("Extension context invalidated, cannot send event")}async requestCurrentState(){try{if(!chrome.runtime||!chrome.runtime.id)return void console.log("Extension context invalidated, cannot request state");const e=await chrome.runtime.sendMessage({type:"get-status"});e&&e.roomId&&(this.isActive=!0,this.isController=e.isController,window.postMessage({type:"cobrowsing-control-change",isController:this.isController},"*"))}catch(e){console.log("Could not get current state:",e.message)}}}"loading"===document.readyState?document.addEventListener("DOMContentLoaded",()=>{new e}):new e})();